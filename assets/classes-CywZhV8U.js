var a=Object.defineProperty;var h=(o,e,t)=>e in o?a(o,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):o[e]=t;var s=(o,e,t)=>h(o,typeof e!="symbol"?e+"":e,t);class u{constructor(e,t,n,i=!1){s(this,"metric",new String);s(this,"metrics",new Map);s(this,"microservices",new Map);s(this,"interactive",new Boolean);s(this,"index",new Number);this.metric=e,this.metrics=t,this.microservices=n,this.interactive=i}getExternalComponents(e,t){const n=new Array;this.microservices.get(e).externalDependencies[t].forEach(r=>{n.includes(r.targetComponent)||n.push(r.targetComponent)});const i=new Array;return this.microservices.get(t).components.forEach(r=>{n.includes(r.name)&&i.push(r)}),i}getComponentsOfFunctionality(e,t){const n=new Array;return this.microservices.get(e).components.forEach(i=>{i.functionalities.includes(t)&&!n.includes(i)&&n.push(i)}),n}getFunctionalitiesOfComponents(e){const t=new Array;e.forEach(r=>{r.functionalities.forEach(c=>{t.includes(c)||t.push(c)})});const n=new Map;e.forEach(r=>{r.functionalities.forEach(c=>{t.includes(c)&&(n[c]||(n[c]=0),n[c]++)})});for(const r in n)n[r]=n[r]/e.length*100;return new Map([...Object.entries(n)].sort((r,c)=>c[1]-r[1]))}maxComponentsPerMicroservice(){let e=0;return this.microservices.forEach(t=>{t.components.length>e&&(e=t.components.length)}),e}minComponentsPerMicroservice(){let e=1/0;return this.microservices.forEach(t=>{t.components.length<e&&(e=t.components.length)}),e===1/0?0:e}}class p{constructor(e,t,n,i,r={}){s(this,"id",new String);s(this,"name",new String);s(this,"components",new Array);s(this,"freeze",new Boolean);s(this,"externalDependencies",new Map);this.id=e,this.name=t,this.components=n,this.freeze=i,this.externalDependencies=r}addExternalDependency(e){this.externalDependencies[e.targetMicroservice]||(this.externalDependencies[e.targetMicroservice]=new Array),this.externalDependencies[e.targetMicroservice].push(e)}getFunctionalitiesWithPercentages(){const e=new Map;this.components.forEach(n=>{n.functionalities.forEach(i=>{e[i]||(e[i]=0),e[i]++})});for(const n in e)e[n]=e[n]/this.components.length*100;return new Map([...Object.entries(e)].sort((n,i)=>i[1]-n[1]))}getFunctionalities(){const e=new Array;return this.components.forEach(t=>{t.functionalities.forEach(n=>{e.includes(n)||e.push(n)})}),e}}class m{constructor(e,t,n,i){s(this,"id",new String);s(this,"name",new String);s(this,"functionalities",new Array);s(this,"dependencies",new Array);this.id=e,this.name=t,this.functionalities=n,this.dependencies=i}}class f{constructor(e,t){s(this,"targetComponent",new String);s(this,"targetMicroservice",new String);this.targetComponent=e,this.targetMicroservice=t}}export{m as C,f as D,p as M,u as S};
